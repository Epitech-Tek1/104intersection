/*
** EPITECH PROJECT, 2019
** my.h
** File description:
** my
*/

#ifndef MY_H_
#define MY_H_


////////////////////////////////////////////////////////////
/// Put a int into a string
///
////////////////////////////////////////////////////////////

#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdarg.h>


////////////////////////////////////////////////////////////
/// Define
///
////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////
/// End of a line >> '\n'
///
////////////////////////////////////////////////////////////
#define _END_LINE_ '\n'

////////////////////////////////////////////////////////////
/// End of a string >> '\0'
///
////////////////////////////////////////////////////////////
#define _END_STR_ '\0'

////////////////////////////////////////////////////////////
/// \brief 2-Define returned 84 if an error occured
///
////////////////////////////////////////////////////////////
#define EXIT_ERROR 84


////////////////////////////////////////////////////////////
/// Functions
///
////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////
/// Put a int into a string
///
////////////////////////////////////////////////////////////
char *my_into_str(int nb);

////////////////////////////////////////////////////////////
/// Print a string
///
////////////////////////////////////////////////////////////
char *my_putstr(char *);

////////////////////////////////////////////////////////////
/// Reverse a string
///
////////////////////////////////////////////////////////////
char *my_revstr(char *);

////////////////////////////////////////////////////////////
/// Replace a string
///
////////////////////////////////////////////////////////////
char *my_strdup(char *);

////////////////////////////////////////////////////////////
/// concatenat strings
///
////////////////////////////////////////////////////////////
char *my_strcat(char *, char const *);

////////////////////////////////////////////////////////////
/// \brief Convert a string to a double
///
/// \param str string to convert
///
/// \return The converted number
////////////////////////////////////////////////////////////
double my_atof(const char *str);

////////////////////////////////////////////////////////////
/// Check if a char is a character
///
////////////////////////////////////////////////////////////
int is_alphanum(char c);

////////////////////////////////////////////////////////////
/// \brief Convert a string to an integer
///
/// \param str string to convert
///
/// \return The converted number
////////////////////////////////////////////////////////////
int my_atoi(char *str);

////////////////////////////////////////////////////////////
/// calcul a power of a number
///
////////////////////////////////////////////////////////////
int my_pow(int, int);

////////////////////////////////////////////////////////////
/// Count the length of a line
///
////////////////////////////////////////////////////////////
int my_length_line(char *tab);

////////////////////////////////////////////////////////////
/// Count line number of a file
///
////////////////////////////////////////////////////////////
int my_nbr_line(char *tab, int i, int line);

////////////////////////////////////////////////////////////
/// Open a file and read
///
////////////////////////////////////////////////////////////
int my_open_read(char *filepath, char *str);

////////////////////////////////////////////////////////////
/// Return opposite number
///
////////////////////////////////////////////////////////////
int my_opp_nbr(int nbr);

////////////////////////////////////////////////////////////
/// Print a number
///
////////////////////////////////////////////////////////////
int my_put_nbr(int);

////////////////////////////////////////////////////////////
/// Count length of a string
///
////////////////////////////////////////////////////////////
int my_strlen(char *);

////////////////////////////////////////////////////////////
/// Count length of a word
///
////////////////////////////////////////////////////////////
// int my_strlen_word(char *str, int i);

////////////////////////////////////////////////////////////
/// Check if a string is number
///
////////////////////////////////////////////////////////////
int my_str_isnum(char *str);

////////////////////////////////////////////////////////////
/// Print a char
///
////////////////////////////////////////////////////////////
void my_putchar(char);

////////////////////////////////////////////////////////////
/// Print a char **
///
////////////////////////////////////////////////////////////
void my_putstrstr(char **tab);

////////////////////////////////////////////////////////////
/// Put a file into a char **
///
////////////////////////////////////////////////////////////
char **my_file_to_word_array(char *filepath);

////////////////////////////////////////////////////////////
/// Put a char * into a char **
///
////////////////////////////////////////////////////////////
char **my_str_to_word_array(char **tab);

#endif /* !MY_H_ */